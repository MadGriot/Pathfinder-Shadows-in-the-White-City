// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PathfinderSecondEdition;

#nullable disable

namespace PathfinderSecondEdition.Migrations
{
    [DbContext(typeof(CharacterSheetDbContext))]
    [Migration("20250108090417_adding Speed")]
    partial class addingSpeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("PathfinderSecondEdition.AbilityScore", b =>
                {
                    b.Property<int>("AbilityScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Constitution")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dexterity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("AbilityScoreId");

                    b.HasIndex("CharacterSheetModelId")
                        .IsUnique();

                    b.ToTable("AbilityScores");

                    b.HasData(
                        new
                        {
                            AbilityScoreId = 1,
                            CharacterSheetModelId = 1,
                            Charisma = 10,
                            Constitution = 10,
                            Dexterity = 10,
                            Intelligence = 10,
                            Strength = 10,
                            Wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 2,
                            CharacterSheetModelId = 2,
                            Charisma = 10,
                            Constitution = 10,
                            Dexterity = 10,
                            Intelligence = 10,
                            Strength = 10,
                            Wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 3,
                            CharacterSheetModelId = 3,
                            Charisma = 10,
                            Constitution = 10,
                            Dexterity = 10,
                            Intelligence = 10,
                            Strength = 10,
                            Wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 4,
                            CharacterSheetModelId = 4,
                            Charisma = 10,
                            Constitution = 10,
                            Dexterity = 10,
                            Intelligence = 10,
                            Strength = 10,
                            Wisdom = 10
                        });
                });

            modelBuilder.Entity("PathfinderSecondEdition.CharacterSheetModel", b =>
                {
                    b.Property<int>("CharacterSheetModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentHP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterSheetModelId");

                    b.ToTable("CharacterSheetModels");

                    b.HasData(
                        new
                        {
                            CharacterSheetModelId = 1,
                            CurrentHP = 15,
                            FirstName = "Konjit",
                            LastName = "Munaye",
                            Level = 1,
                            MaxHP = 15,
                            Speed = 30
                        },
                        new
                        {
                            CharacterSheetModelId = 2,
                            CurrentHP = 22,
                            FirstName = "Kanandi",
                            LastName = "Oladoyinbo",
                            Level = 1,
                            MaxHP = 22,
                            Speed = 25
                        },
                        new
                        {
                            CharacterSheetModelId = 3,
                            CurrentHP = 14,
                            FirstName = "Cris",
                            LastName = "Marcellus",
                            Level = 1,
                            MaxHP = 14,
                            Speed = 25
                        },
                        new
                        {
                            CharacterSheetModelId = 4,
                            CurrentHP = 0,
                            FirstName = "Unkown",
                            LastName = "Person",
                            Level = 1,
                            MaxHP = 0,
                            Speed = 25
                        });
                });

            modelBuilder.Entity("PathfinderSecondEdition.AbilityScore", b =>
                {
                    b.HasOne("PathfinderSecondEdition.CharacterSheetModel", "CharacterSheetModel")
                        .WithOne("AbilityScore")
                        .HasForeignKey("PathfinderSecondEdition.AbilityScore", "CharacterSheetModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterSheetModel");
                });

            modelBuilder.Entity("PathfinderSecondEdition.CharacterSheetModel", b =>
                {
                    b.Navigation("AbilityScore")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
